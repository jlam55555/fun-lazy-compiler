module Evaluators.GMachine.DumpAsm
  ( exportAsm
  ) where

import           Evaluators.GMachine.Compiler
import           Evaluators.GMachine.State

import           CorePrelude
import           Iseq
import           Language
import           PrettyPrint

tab :: Iseq -> Iseq
tab iseq = iAppend (iStr "    ") $ iIndent iseq

-- TODO: remove duplicate supercombinators
exportAsm :: CoreProgram -> String
exportAsm prog =
  iDisplay
    $   iAppend asmPrelude
    $   iInterleave iNewline
    $   dumpScAsm
    <$> compileSc
    <$> preludeDefs
    ++  prog
 where
  asmPrelude = iInterleave
    iNewline
    [ infoLabel
    , commentedProgram
    , iStr ""
    , tab $ iStr "section .text\nglobal main"
    , iStr "main:"
    , tab $ iInterleave
      iNewline
      [iStr $ show $ Pushglobal "main", iStr "mov rbp, rsp", iStr $ show Unwind]
    , iNewline
    ]
  infoLabel = iStr "; Autogenerated by flc"
  commentedProgram =
    iInterleave iNewline $ iStr <$> ("; " ++) <$> (lines $ pprint prog)

dumpScAsm :: GmCompiledSC -> Iseq
dumpScAsm (f, n, is) = iInterleave
  iNewline
  [ tab $ iStr "section .text"
  , iStr $ f ++ ".sc:"
  , tab $ iInterleave iNewline $ iStr <$> show <$> is
  , iStr ""
  , tab $ iStr "section .data"
  , iStr $ f ++ ".node:"
  , tab $ iStr $ "dq TAG_GLOBAL\ndq " ++ show n ++ "\ndq " ++ f ++ ".sc\n"
  ]
